<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stars.travel.dao.base.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.stars.travel.model.base.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="checked" property="checked" jdbcType="BIT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="downs" property="downs" jdbcType="SMALLINT" />
    <result column="recommend" property="recommend" jdbcType="VARCHAR" />
    <result column="ups" property="ups" jdbcType="SMALLINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="relate_id" property="relateId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, checked, createtime, downs, recommend, ups, phone, relate_id, type, is_enable
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stars.travel.model.base.CommentCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from root_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from root_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from root_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stars.travel.model.base.CommentCriteria" >
    delete from root_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stars.travel.model.base.Comment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into root_comment (checked, createtime, downs, 
      recommend, ups, phone, 
      relate_id, type, is_enable
      )
    values (#{checked,jdbcType=BIT}, #{createtime,jdbcType=TIMESTAMP}, #{downs,jdbcType=SMALLINT}, 
      #{recommend,jdbcType=VARCHAR}, #{ups,jdbcType=SMALLINT}, #{phone,jdbcType=VARCHAR}, 
      #{relateId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{isEnable,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stars.travel.model.base.Comment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into root_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="checked != null" >
        checked,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="downs != null" >
        downs,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="ups != null" >
        ups,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="relateId != null" >
        relate_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="checked != null" >
        #{checked,jdbcType=BIT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="downs != null" >
        #{downs,jdbcType=SMALLINT},
      </if>
      <if test="recommend != null" >
        #{recommend,jdbcType=VARCHAR},
      </if>
      <if test="ups != null" >
        #{ups,jdbcType=SMALLINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="relateId != null" >
        #{relateId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stars.travel.model.base.CommentCriteria" resultType="java.lang.Integer" >
    select count(*) from root_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update root_comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.checked != null" >
        checked = #{record.checked,jdbcType=BIT},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downs != null" >
        downs = #{record.downs,jdbcType=SMALLINT},
      </if>
      <if test="record.recommend != null" >
        recommend = #{record.recommend,jdbcType=VARCHAR},
      </if>
      <if test="record.ups != null" >
        ups = #{record.ups,jdbcType=SMALLINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.relateId != null" >
        relate_id = #{record.relateId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update root_comment
    set id = #{record.id,jdbcType=INTEGER},
      checked = #{record.checked,jdbcType=BIT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      downs = #{record.downs,jdbcType=SMALLINT},
      recommend = #{record.recommend,jdbcType=VARCHAR},
      ups = #{record.ups,jdbcType=SMALLINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      relate_id = #{record.relateId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stars.travel.model.base.Comment" >
    update root_comment
    <set >
      <if test="checked != null" >
        checked = #{checked,jdbcType=BIT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="downs != null" >
        downs = #{downs,jdbcType=SMALLINT},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend,jdbcType=VARCHAR},
      </if>
      <if test="ups != null" >
        ups = #{ups,jdbcType=SMALLINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="relateId != null" >
        relate_id = #{relateId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stars.travel.model.base.Comment" >
    update root_comment
    set checked = #{checked,jdbcType=BIT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      downs = #{downs,jdbcType=SMALLINT},
      recommend = #{recommend,jdbcType=VARCHAR},
      ups = #{ups,jdbcType=SMALLINT},
      phone = #{phone,jdbcType=VARCHAR},
      relate_id = #{relateId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>