<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stars.travel.dao.base.mapper.JourneyCollectionMapper" >
  <resultMap id="BaseResultMap" type="com.stars.travel.model.base.JourneyCollection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="phone_journey_key" property="phoneJourneyKey" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="relate_id" property="relateId" jdbcType="INTEGER" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, phone_journey_key, type, createtime, phone, relate_id, is_enable, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stars.travel.model.base.JourneyCollectionCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from root_journey_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.stars.travel.model.base.JourneyCollectionKey" >
    select 
    <include refid="Base_Column_List" />
    from root_journey_collection
    where id = #{id,jdbcType=INTEGER}
      and phone_journey_key = #{phoneJourneyKey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.stars.travel.model.base.JourneyCollectionKey" >
    delete from root_journey_collection
    where id = #{id,jdbcType=INTEGER}
      and phone_journey_key = #{phoneJourneyKey,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stars.travel.model.base.JourneyCollectionCriteria" >
    delete from root_journey_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stars.travel.model.base.JourneyCollection" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into root_journey_collection (phone_journey_key, type, createtime, 
      phone, relate_id, is_enable, 
      updatetime)
    values (#{phoneJourneyKey,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR}, #{relateId,jdbcType=INTEGER}, #{isEnable,jdbcType=BIT}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.stars.travel.model.base.JourneyCollection" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into root_journey_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="phoneJourneyKey != null" >
        phone_journey_key,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="relateId != null" >
        relate_id,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="phoneJourneyKey != null" >
        #{phoneJourneyKey,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="relateId != null" >
        #{relateId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stars.travel.model.base.JourneyCollectionCriteria" resultType="java.lang.Integer" >
    select count(*) from root_journey_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update root_journey_collection
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phoneJourneyKey != null" >
        phone_journey_key = #{record.phoneJourneyKey,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.relateId != null" >
        relate_id = #{record.relateId,jdbcType=INTEGER},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update root_journey_collection
    set id = #{record.id,jdbcType=INTEGER},
      phone_journey_key = #{record.phoneJourneyKey,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      phone = #{record.phone,jdbcType=VARCHAR},
      relate_id = #{record.relateId,jdbcType=INTEGER},
      is_enable = #{record.isEnable,jdbcType=BIT},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stars.travel.model.base.JourneyCollection" >
    update root_journey_collection
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="relateId != null" >
        relate_id = #{relateId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and phone_journey_key = #{phoneJourneyKey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stars.travel.model.base.JourneyCollection" >
    update root_journey_collection
    set type = #{type,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      relate_id = #{relateId,jdbcType=INTEGER},
      is_enable = #{isEnable,jdbcType=BIT},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
      and phone_journey_key = #{phoneJourneyKey,jdbcType=VARCHAR}
  </update>
</mapper>