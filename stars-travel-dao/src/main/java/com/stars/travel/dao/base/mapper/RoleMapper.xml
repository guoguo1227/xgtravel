<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stars.travel.dao.base.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.stars.travel.model.base.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="is_super" property="isSuper" jdbcType="BIT" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="site_id" property="siteId" jdbcType="INTEGER" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, is_super, priority, role_name, site_id, is_enable
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stars.travel.model.base.RoleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from root_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from root_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from root_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stars.travel.model.base.RoleCriteria" >
    delete from root_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stars.travel.model.base.Role" >
    <selectKey resultType="java.lang.Integer" keyProperty="roleId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into root_role (is_super, priority, role_name, 
      site_id, is_enable)
    values (#{isSuper,jdbcType=BIT}, #{priority,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{siteId,jdbcType=INTEGER}, #{isEnable,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.stars.travel.model.base.Role" >
    <selectKey resultType="java.lang.Integer" keyProperty="roleId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into root_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="isSuper != null" >
        is_super,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="siteId != null" >
        site_id,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="isSuper != null" >
        #{isSuper,jdbcType=BIT},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stars.travel.model.base.RoleCriteria" resultType="java.lang.Integer" >
    select count(*) from root_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update root_role
    <set >
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.isSuper != null" >
        is_super = #{record.isSuper,jdbcType=BIT},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.siteId != null" >
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update root_role
    set role_id = #{record.roleId,jdbcType=INTEGER},
      is_super = #{record.isSuper,jdbcType=BIT},
      priority = #{record.priority,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      site_id = #{record.siteId,jdbcType=INTEGER},
      is_enable = #{record.isEnable,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stars.travel.model.base.Role" >
    update root_role
    <set >
      <if test="isSuper != null" >
        is_super = #{isSuper,jdbcType=BIT},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null" >
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stars.travel.model.base.Role" >
    update root_role
    set is_super = #{isSuper,jdbcType=BIT},
      priority = #{priority,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      site_id = #{siteId,jdbcType=INTEGER},
      is_enable = #{isEnable,jdbcType=BIT}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>